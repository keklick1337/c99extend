#!/usr/bin/env sh
#
# by Vladislav Tislenko aka keklick1337 (2025)
# This script detects compiler and generates a Makefile for building
# the string_utf8 library and its tests.

echo "Running configure script..."

# Try to detect a C compiler (clang or gcc)
if command -v clang >/dev/null 2>&1; then
    CC=clang
    echo "Detected clang as compiler."
elif command -v gcc >/dev/null 2>&1; then
    CC=gcc
    echo "Detected gcc as compiler."
else
    echo "ERROR: No suitable C compiler found (clang or gcc)."
    exit 1
fi

# Default flags (you can expand or modify them)
CFLAGS="-Wall -Wextra -std=c99 -O2"

# Create the Makefile
cat << EOF > Makefile
# ---------------------------------------------------------
# Makefile generated by the configure script
# by Vladislav Tislenko aka keklick1337 (2025)
#
# This Makefile will build the string_utf8 library (static)
# and the test executable (string_utf8_test).
# ---------------------------------------------------------

CC = $CC
CFLAGS = $CFLAGS
AR = ar
RANLIB = ranlib

LIB_NAME = libstring_utf8.a

SRC_DIR = ./strings
TESTS_DIR = ./tests
OBJS = string_utf8.o

all: \$(LIB_NAME) string_utf8_test

# Build static library
\$(LIB_NAME): \$(OBJS)
	\$(AR) rcs \$@ \$^
	\$(RANLIB) \$@

string_utf8.o: \$(SRC_DIR)/string_utf8.c \$(SRC_DIR)/string_utf8.h
	\$(CC) \$(CFLAGS) -c \$< -o \$@

# Build test executable
string_utf8_test: \$(TESTS_DIR)/string_utf8_test.c \$(LIB_NAME)
	\$(CC) \$(CFLAGS) -I\$(SRC_DIR) \$^ -o \$@

# Run test
run: string_utf8_test
	./string_utf8_test

clean:
	rm -f *.o *.a string_utf8_test

.PHONY: all run clean
EOF

echo "Makefile has been created successfully."
echo "You can now run 'make' or 'make run' to build and test."
exit 0
